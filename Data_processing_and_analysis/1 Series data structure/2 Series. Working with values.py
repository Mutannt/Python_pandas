# Series. Работа со значениями
import pandas as pd


ds1 = pd.Series([1, 2, 3, 4], index=["a", "b", "c", "d"])
print(ds1)

ds2 = pd.Series([1, 2, 3, 4])
print(ds2)
# # Вывести по индексу
# print(ds1['b'], ds1.d) # 2 и 4
# print(ds1[2]) # 3
# # Вывести сразу несколько знеачений с индексами
# print(ds1[['a', 'd']]) # a 1, d 4

# #  Изменить значение по индексу
# ds1['d'] = 5
# print(ds1)

# # Добавить новое значение
# ds1['e'] = 6
# print(ds1)

# # Добавить с использованием Атрибута at
# ds1.at['f'] = 7
# print(ds1)
# print(ds2.at[1]) # Для числовых ключей
# print(ds2.iat[1]) # Для интегер ключей

# #  Изменить несколько значений
# ds1[['d', 'e', 'f']] = ['4', '5', '6']
# print(ds1)

# ds1.at['g'] = 10.5 # Все значения станут float
# print(ds1)

# Математические операции ==================================================
print(ds2)
print(ds2 * 2) # Без перезаписи # Перезапись ds2 = ds2 * 2

cities = pd.Series(
    {'Челябинск': 1179288, 'Екатеринбург': 1544376, 'Париж': 2000000, 'Берлин': 3800000},
     index=['Челябинск', 'Париж', 'Берлин', 'Милан']
     )
    # Если нет индекса, то значение не берётся.  Если нет значения, то NaN
print(cities)

test = pd.Series([1, 2, 3], index=['a', 'b', 'c'])
test2  = pd.Series([4, 5, 6, 7], index=['a', 'b', 'c', 'd'])

print(test + test2) # Складываются значения с одинаковыми индексами. NaN если у одной из серий нет индекса
# Но можно сложить, используя значение по умолчанию
print(test.add(test2, fill_value=0))

